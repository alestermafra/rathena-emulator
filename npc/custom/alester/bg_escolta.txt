-	script	bg_escolta#control	-1,{
OnInit:
	.minplayer2start = 1;      // minimum players to start (ex. if 3vs3, set to 3)
	.eventlasting    = 5 * 60;  // event duration before auto-reset (20 minutes * seconds)
	setarray .rewarditem[0],   // rewards for the winning team: <item>,<amount>,...
		501, 10;
	mapwarp "bat_b01", "prontera", 156, 191;
	end;
	
OnStart:
	// check ready
	if(getwaitingroomstate( 0, .rednpcname$) < .minplayer2start || getwaitingroomstate( 0, .bluenpcname$) < .minplayer2start)
		end;

	// prepare match
	// create Battleground and teams
	if(rand(2)) {
		.atk = waitingroom2bg("bat_b01", 10, 290, strnpcinfo(0)+"::OnAtkQuit", strnpcinfo(0) + "::OnAtkDead", .rednpcname$);
		.def = waitingroom2bg("bat_b01", 390, 10, strnpcinfo(0)+"::OnDefQuit", strnpcinfo(0) + "::OnDefDead", .bluenpcname$);
	}
	else {
		.def = waitingroom2bg("bat_b01", 10, 290, strnpcinfo(0)+"::OnAtkQuit", strnpcinfo(0) + "::OnDefDead", .rednpcname$);
		.atk = waitingroom2bg("bat_b01", 390, 10, strnpcinfo(0)+"::OnDefQuit", strnpcinfo(0) + "::OnAtkDead", .bluenpcname$);
	}
	
	delwaitingroom .rednpcname$;
	delwaitingroom .bluenpcname$;
	
	// send to waiting room
	bg_warp .atk, "bat_b01", 10, 290;
	bg_warp .def, "bat_b01", 390, 10;

	// delay before match begins
	sleep 10000;
	mapannounce "bat_b01", "O time defensor deve impedir o avanço do Morroc Abestado!", bc_map;
	sleep 5000;
	mapannounce "bat_b01", "A batalha começará em 5 segundos", bc_map;
	sleep 2000;
	for ( .@i = 3; .@i > 0; --.@i ) {
		mapannounce "bat_b01", "["+ .@i +"]", bc_map;
		sleep 1000;
	}
	
	// start match
	bg_warp .atk, "bat_b01", 88, 75;
	bg_warp .def, "bat_b01", 313, 225;
	sleep 500;
	mapannounce "bat_b01", "Comecem!", bc_map;
	donpcevent "Morroc Abestado#bg_escolta::OnStart";
	
	// match duration
	sleep .eventlasting * 1000;
	
	if(!.winner) {
		.winner = .def;
		.loser = .atk;
	}

	// end match, destroy Battleground, reset NPCs
	mapannounce "bat_b01", "O Time " + ((.winner == .atk)? "atacante" : "defensor") + " venceu!", bc_map;
	
	bg_get_data .winner, 1;
	for ( .@i = 0; .@i < $@arenamemberscount; ++.@i )
		getitem .rewarditem[0], .rewarditem[1], $@arenamembers[.@i];
	
	if(.loser) {
		bg_get_data .loser, 1;
		for (.@i = 0; .@i < $@arenamemberscount; ++.@i)
			getitem .rewarditem[0], .rewarditem[1] / 2, $@arenamembers[.@i];
	}
		
	sleep 5000;
	bg_warp .atk, "prontera", 156, 191;
	bg_warp .def, "prontera", 156, 191;
	bg_destroy .atk;
	bg_destroy .def;
	.winner = 0;
	donpcevent .rednpcname$ +"::OnStart";
	donpcevent .bluenpcname$ +"::OnStart";
	end;

// "OnDeath" event
OnAtkDead:
	warp "bat_b01", 10, 290;
	doevent "Curandeira::OnGetBuffs";
	addtimer 10000, strnpcinfo(0) + "::OnAtkRevive";
	end;
	
OnDefDead:
	warp "bat_b01", 390, 10;
	doevent "Curandeira::OnGetBuffs";
	addtimer 10000, strnpcinfo(0) + "::OnDefRevive";
	end;
	
OnAtkRevive:
	percentheal 100, 100;
	warp "bat_b01", 88, 75;
	end;
	
OnDefRevive:
	percentheal 100, 100;
	warp "bat_b01", 313, 225;
	end;

// "OnQuit" event
OnAtkQuit:  callsub L_Quit, .atk, "atacante";
OnDefQuit: callsub L_Quit, .def, "defensor";
L_Quit:
	.@team = getarg(0);
	if(!bg_get_data(.@team, 0)) {
		mapannounce "bat_b01", "Todos do time "+ getarg(1) +" saíram!", bc_map, 0xff3333;
		.loser = 0;
		.winner = (.@team == .atk? .def : .atk);
		awake strnpcinfo(0);
	}
	end;
}

prontera,152,184,5	script	Time Vermelho#bg_escolta	733,{
	end;
OnInit:
	sleep 1;
	set getvariableofnpc( .rednpcname$, "bg_escolta#control" ), strnpcinfo(0);
OnStart:
	waitingroom "Vermelho", getvariableofnpc( .minplayer2start, "bg_escolta#control" ) +1, "bg_escolta#control::OnStart", getvariableofnpc( .minplayer2start, "bg_escolta#control" );
	end;
}

prontera,159,184,3	script	Time Azul#bg_escolta	734,{
	end;
OnInit:
	sleep 1;
	set getvariableofnpc( .bluenpcname$, "bg_escolta#control" ), strnpcinfo(0);
OnStart:
	waitingroom "Azul", getvariableofnpc( .minplayer2start, "bg_escolta#control" ) +1, "bg_escolta#control::OnStart", getvariableofnpc( .minplayer2start, "bg_escolta#control" );
	end;
}











// *getmapxy("<variable for map name>",<variable for x>,<variable for y>{,<type>,"<search value>"})
// *getareausers("<map name>",<x1>,<y1>,<x2>,<y2>)

bat_b01,145,147,3	script	Morroc Abestado#bg_escolta	1917,{
	end;
	
	OnInit:
		setarray .path[0], 145, 147, 157, 161, 171, 171, 182, 185, 198, 193, 213, 190, 224, 182, 237, 171, 248, 160, 259, 151, 273, 150, 285, 150, 300, 149, 313, 149, 326, 149;
		disablenpc;
		end;
	
	OnStart:
		.currentPath = 0;
		.direction = 1;
		set .a, getvariableofnpc(.atk, "bg_escolta#control");
		set .d, getvariableofnpc(.def, "bg_escolta#control");
		enablenpc;
		moveNPC strnpcinfo(0), 145, 147;
	OnTimer1000:
		stopnpctimer;
		getmapxy(.@map$, .@x, .@y, BL_NPC);
		
		viewpointmap .@map$, 1, .@x, .@y, 1, 0xFF0000;
		
		if(.@x == .path[.currentPath] && .@y == .path[.currentPath + 1]) {
			if(.@x == .path[getarraysize(.path) - 2] && .@y == .path[getarraysize(.path) - 1]) {
				// attacker win
				set getvariableofnpc(.winner, "bg_escolta#control"), .a;
				set getvariableofnpc(.loser, "bg_escolta#control"), .d;
				awake "bg_escolta#control";
				misceffect 901;
				sleep 5000;
				disablenpc;
				end;
			}
			
			if(.direction == 1) {
				.currentPath = .currentPath + 2;
			}
			else {
				.currentPath = .currentPath - 2;
				if(.currentPath < 0) {
					.currentPath = 0;
				}
			}
		}
		
		.@hasAttackMember = bg_getareausers(.a, .@map$, .@x-5, .@y-5, .@x+5, .@y+5);
		.@hasDefenseMember = bg_getareausers(.d, .@map$, .@x-5, .@y-5, .@x+5, .@y+5);
		
		if(.@hasAttackMember && !.@hasDefenseMember) {
			if(.direction == 0) {
				.direction = 1;
				.currentPath = .currentPath + 2;
			}
			.@speed = 700;
			if(.@hasAttackMember == 2) {
				.@speed = 600;
			}
			else if(.@hasAttackMember >= 3) {
				.@speed = 500;
			}
			npcspeed .@speed;
			npcwalkto .path[.currentPath], .path[.currentPath + 1];
		}
		else if(!.@hasAttackMember && .@hasDefenseMember) {
			if(.direction == 1) {
				.direction = 0;
				.currentPath = .currentPath - 2;
			}
			npcspeed 1000;
			npcwalkto .path[.currentPath], .path[.currentPath + 1];
		}
		else {
			npcstop;
		}
		
		initnpctimer;
		end;
}

bat_b01	mapflag	battleground
bat_b01	mapflag	nosave	SavePoint
bat_b01	mapflag	nowarp
bat_b01	mapflag	nowarpto
bat_b01	mapflag	noteleport
bat_b01	mapflag	nomemo
bat_b01	mapflag	nopenalty
bat_b01	mapflag	nobranch
bat_b01	mapflag	noicewall